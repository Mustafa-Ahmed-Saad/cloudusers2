{"version":3,"sources":["api/users.js","pages/userspage.js","components/viewUser.js","pages/userpage.js","components/usersForm.js","pages/EditUserPage.js","pages/createUserPage.js","pages/NotFound.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["GetUsers","a","axios","get","response","GetUser","userId","DeleteUser","id","delete","updateUser","values","put","addUser","post","UsersPage","state","users","componentDidMount","then","setState","data","catch","error","alert","deleteUser","user","index","indexOf","splice","className","this","length","map","name","to","onClick","style","textAlign","Component","ViewUser","props","email","address","city","company","window","history","back","Userpage","match","params","UsersForm","schema","Yup","shape","required","username","enableReinitialize","initialValues","onSubmit","validationSchema","autoComplete","when","dirty","message","placeholder","htmlFor","type","EditUserPage","push","handelback","CreateUser","document","querySelector","classList","remove","add","NotFound","location","pathname","NavBar","MyNavLink","myNavLinkProps","exact","activeClassName","children","HomePage","AboutPage","App","hashType","path","component","UserPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b42abea6.chunk.js","sourcesContent":["// import React from 'react';\nimport axios from 'axios';\n\nasync function GetUsers() {\n   const response = await axios.get('https://612537b63c91fb0017e729e6.mockapi.io/users');\n   // console.log(response);\n   return response;\n}\n// or you can use then\n// function GetUsers() {\n//    let response = axios.get('https://jsonplaceholder.typicode.com/users').then((response) => {\n//       return response;\n//    });\n//    return response;\n// }\n\n// get\nasync function GetUser(userId) {\n   const response = await axios.get('https://612537b63c91fb0017e729e6.mockapi.io/users/' + userId);\n   // console.log(response);\n   return response;\n}\n\n// delete\nasync function DeleteUser(id) {\n   const response = await axios.delete('https://612537b63c91fb0017e729e6.mockapi.io/users/' + id);\n   // console.log(response);\n   return response;\n}\n// or you can use then\n// function DeleteUser(id) {\n//    let response = axios.get('https://jsonplaceholder.typicode.com/users/' + id).then((response) => {\n//       return response;\n//    });\n//    return response;\n// }\n\n// edit\nasync function updateUser(id, values) {\n   const response = await axios.put('https://612537b63c91fb0017e729e6.mockapi.io/users/' + id, values);\n   // console.log(response);\n   return response;\n}\n\n// add\nasync function addUser(values) {\n   const response = await axios.post('https://612537b63c91fb0017e729e6.mockapi.io/users/', values);\n   // console.log(response);\n   return response;\n}\n\nexport { GetUsers, GetUser, DeleteUser, updateUser, addUser };\n","import React, { Component } from 'react';\nimport { GetUsers } from '../api/users';\nimport { Link } from 'react-router-dom';\nimport { DeleteUser } from '../api/users';\n\nexport default class UsersPage extends Component {\n   state = {\n      users: [],\n   };\n\n   componentDidMount = () => {\n      GetUsers()\n         .then((response) => {\n            // console.log(response);\n            this.setState({\n               users: response.data,\n            });\n         })\n         .catch((error) => {\n            alert('get users error');\n         });\n   };\n\n   deleteUser = (user) => {\n      // delete user from server\n      DeleteUser(user.id)\n         .then(() => {\n            // delete user from dom by delet it from state (after deletit from server)\n            let users = this.state.users;\n            const index = users.indexOf(user);\n            users.splice(index, 1);\n            this.setState({\n               users: users,\n            });\n            // or we can write users only inested of users: users\n            // this.setState({\n            //    users,\n            // });\n         })\n         .catch((error) => {\n            // console.error(error);\n            alert('api delete requerst error');\n         });\n   };\n\n   render() {\n      return (\n         <div className=\"all-users\">\n            <h2>users</h2>\n            {/* <div className=\"container-all-users\"> */}\n            {this.state.users.length > 0 ? (\n               <ul>\n                  {this.state.users.map((user) => {\n                     return (\n                        <li className=\"row justify-content-center\" key={user.id}>\n                           <span className=\"col-12 text-center col-md-5 text-md-start mb-1\">{user.name}</span> {'  '}\n                           <span className=\"col-12 col-sm-4 text-center col-md-2 text-md-start mb-1\">\n                              <Link className=\"btn btn-primary\" to={'/cloudusers2/users/' + user.id}>\n                                 view &nbsp;<i className=\"far fa-eye\"></i>\n                              </Link>\n                           </span>\n                           <span className=\"col-12 col-sm-4 text-center col-md-2 text-md-start mb-1\">\n                              <Link className=\"btn btn-success\" to={'/cloudusers2/users/edit/' + user.id}>\n                                 edit &nbsp;<i className=\"far fa-edit\"></i>\n                              </Link>\n                           </span>\n                           <span className=\"col-12 col-sm-4 text-center col-md-2 text-md-start mb-1\">\n                              <span className=\"btn btn-danger\" onClick={() => this.deleteUser(user)}>\n                                 delete &nbsp;<i className=\"fas fa-trash-alt\"></i>\n                              </span>\n                           </span>\n                        </li>\n                     );\n                  })}\n               </ul>\n            ) : (\n               <h4 style={{ textAlign: 'center' }}>No users to show</h4>\n            )}\n            <div className=\"adduser-div\">\n               <span>\n                  <Link className=\"btn btn-warning\" to=\"/cloudusers2/users/create/\">\n                     add user &nbsp;<i className=\"far fa-plus-square\"></i>\n                  </Link>\n               </span>\n            </div>\n            {/* </div> */}\n         </div>\n      );\n   }\n}\n","import React from 'react';\n\nfunction ViewUser(props) {\n   const handelback = () => {\n      window.history.back();\n   };\n   return (\n      <div className=\"user-conrainer\">\n         <div className=\"conatiner\">\n            <h2>user: {props.user.name}</h2>\n            <div className=\"overlay\">\n               <div>name: {props.user.name}</div>\n               <div>email: {props.user.email}</div>\n               <div>city: {props.user.address.city}</div>\n               {/* error here and i dont know why??????? /// because we should in the first time userpage component load it will done the render in firt befor componentdidmount so we will find error so we should't call viewuser in first time of load render userpage because user in it's state is not found so we shoud check if it exext or not befor calling viewuser component*/}\n               <div>company name: {props.user.company.name}</div>\n            </div>\n            <div className=\"back\">\n               <button className=\"btn btn-secondary\" onClick={handelback}>\n                  back to all users\n               </button>\n            </div>\n         </div>\n      </div>\n   );\n}\n\nexport default ViewUser;\n","import React, { Component } from 'react';\nimport { GetUser } from '../api/users';\nimport ViewUser from '../components/viewUser';\n\nexport default class Userpage extends Component {\n   state = {\n      user: { name: '', email: '', address: { city: '' }, company: { name: '' } },\n   };\n\n   componentDidMount = () => {\n      // get id user from url\n      const userId = this.props.match.params.userId;\n      GetUser(userId)\n         .then((response) => {\n            this.setState({ user: response.data });\n         })\n         .catch((error) => alert('get user error'));\n   };\n\n   render() {\n      return (\n         <div>\n            <ViewUser user={this.state.user} />\n            {/* {this.state.user.id > 0 ? <ViewUser user={this.state.user} /> : null} */}\n            {/* خلي بالك هنا انت لازم تتاكد ان ال ستيت بقي فيها اليوزر المطلوب لان الريندر هتتعمل قبل ال كومبوننت ديد ماونت فلو معملتش الشرط دا هتلاقي بيحصل ايرور لما تجيب السيتي او المدينة من الادرس اللي جوا اليوزر لان في الواقع الريندر حصل في الاول قبل ما اليوزر اللي في الستيت يكون موجود فراح عمل ريندر فلاقي اليوزر مفهوش ادرس و انت عاوز السيتي من الادرس فبيديك ايرور فالحل انك تتاكد ان اليوزر موجود الاول و بعدين تبدا تبدا تجيب الكومبوننت دا */}\n            {/* و برضو ممكن نحل المشكلة دي عن طريق اننا ندي قيم افتراضية للحجات اللي احنا هنجيبها في كومبوننت ال فيو يوزر بحيث في اول ريندر يبدا بالقيم الافتراضية وليكن قيم فاضية و بعدين لما الستيت تتغير في الكومبوننت ديد ماونت هيبدا يعمل كومبوننت ديد ابديت و ريندر تاني و في الرندر التاني بقي هيكون الاوبجيكت اليوزر اللي احنا حطيناه فوق بقي فية القيم المطلوبة و المرادة وساعتها ممكن نلغي الاف كونديشن دي لان في اول ريندر بالفعل هيكون في اليوزر القيم الابتدائية للحجات اللي احنا عاوزينها فمش هيدي ايرور بل هيطلع القيم دي و بعديها بثواني قليلة جدا لا تحلاحظ هيبدا الستيت تتغير فهيبدا ينفز الكومبوننت دي ابديت و بعدين يعمل ريندر و يجيب القيم الجديدة المرادة */}\n         </div>\n      );\n   }\n}\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Prompt } from 'react-router-dom';\n\nexport default function UsersForm(props) {\n   const schema = Yup.object().shape({\n      name: Yup.string().required(),\n      email: Yup.string().email().required(),\n      username: Yup.string().required(),\n   });\n\n   return (\n      // this is old way to write formik\n      <Formik enableReinitialize={true} initialValues={props.values} onSubmit={props.onSubmit} validationSchema={schema}>\n         {(props) => {\n            return (\n               <Form className=\"form\" autoComplete=\"off\">\n                  {props.values.id ? null : ( // <Prompt when={props.values.name === props.initialValues.name && props.values.email === props.initialValues.email && props.values.username === props.initialValues.username} message={'you dont edit any think (there are same name, email and username)'} />\n                     <Prompt when={props.dirty} message={'are you want to leave this page without add user'} />\n                  )}\n                  <div className=\"input-container ic1\">\n                     <Field name=\"name\" id=\"firstname\" className=\"input\" placeholder=\" \" />\n                     <div className=\"cut cut-short\"></div>\n                     <label htmlFor=\"firstname\" className=\"placeholder\">\n                        Name\n                     </label>\n                     <ErrorMessage name=\"name\" />\n                  </div>\n                  <hr />\n\n                  <div className=\"input-container ic2\">\n                     <Field name=\"email\" id=\"lastname\" className=\"input\" placeholder=\" \" />\n                     <div className=\"cut cut-short\"></div>\n                     <label htmlFor=\"lastname\" className=\"placeholder\">\n                        Email\n                     </label>\n                     <ErrorMessage name=\"email\" />\n                  </div>\n                  <hr />\n\n                  <div className=\"input-container ic2\">\n                     <Field name=\"username\" id=\"email\" className=\"input\" placeholder=\" \" />\n                     <div className=\"cut\"></div>\n                     <label htmlFor=\"email\" className=\"placeholder\">\n                        user name\n                     </label>\n                     <ErrorMessage name=\"username\" />\n                  </div>\n\n                  <button type=\"submit\" className=\"submit btn btn-primary\">\n                     {props.values.id ? 'Edit' : 'Add'}\n                  </button>\n               </Form>\n            );\n         }}\n      </Formik>\n   );\n}\n","import React, { Component } from 'react';\nimport { GetUser, updateUser } from '../api/users';\nimport UsersForm from '../components/usersForm';\nimport { Link } from 'react-router-dom';\n\nexport default class EditUserPage extends Component {\n   state = {\n      user: { name: 'mm', email: '', username: '', address: { city: '' }, company: { name: '' } },\n   };\n\n   componentDidMount = () => {\n      const userId = this.props.match.params.userId;\n      GetUser(userId)\n         .then((response) => {\n            this.setState({ user: response.data });\n         })\n         .catch((error) => alert('get user error'));\n   };\n\n   updateUser = (values) => {\n      const id = this.state.user.id;\n      if (values.name === this.state.user.name && values.email === this.state.user.email && values.username === this.state.user.username) {\n         alert('you dont edit any think (there are same name, email and username)');\n      } else {\n         updateUser(id, values)\n            .then(() => {\n               alert('user edited success');\n               // this.props.history.push('/users'); // to redirect to another component (userspage) but in hash state in line this will not work\n               // window.history.back(); // to redirect to another component (userspage)\n               this.props.history.push('/#cloudusers2/users');\n            })\n            .catch((error) => {\n               alert('edit user error');\n            });\n         // console.log('emty the inpot');\n         // console.log(document.querySelectorAll('.form input'));\n      }\n   };\n\n   handelback = () => {\n      window.history.back();\n   };\n\n   render() {\n      return (\n         <div className=\"container-edituser\">\n            <h2>edit user</h2>\n            <UsersForm values={this.state.user} onSubmit={this.updateUser} />\n            {/* {this.state.user.id > 0 ? <ViewUser user={this.state.user} /> : null} */}\n            {/* خلي بالك هنا انت لازم تتاكد ان ال ستيت بقي فيها اليوزر المطلوب لان الريندر هتتعمل قبل ال كومبوننت ديد ماونت فلو معملتش الشرط دا هتلاقي بيحصل ايرور لما تجيب السيتي او المدينة من الادرس اللي جوا اليوزر لان في الواقع الريندر حصل في الاول قبل ما اليوزر اللي في الستيت يكون موجود فراح عمل ريندر فلاقي اليوزر مفهوش ادرس و انت عاوز السيتي من الادرس فبيديك ايرور فالحل انك تتاكد ان اليوزر موجود الاول و بعدين تبدا تبدا تجيب الكومبوننت دا */}\n            {/* و برضو ممكن نحل المشكلة دي عن طريق اننا ندي قيم افتراضية للحجات اللي احنا هنجيبها في كومبوننت ال فيو يوزر بحيث في اول ريندر يبدا بالقيم الافتراضية وليكن قيم فاضية و بعدين لما الستيت تتغير في الكومبوننت ديد ماونت هيبدا يعمل كومبوننت ديد ابديت و ريندر تاني و في الرندر التاني بقي هيكون الاوبجيكت اليوزر اللي احنا حطيناه فوق بقي فية القيم المطلوبة و المرادة وساعتها ممكن نلغي الاف كونديشن دي لان في اول ريندر بالفعل هيكون في اليوزر القيم الابتدائية للحجات اللي احنا عاوزينها فمش هيدي ايرور بل هيطلع القيم دي و بعديها بثواني قليلة جدا لا تحلاحظ هيبدا الستيت تتغير فهيبدا ينفز الكومبوننت دي ابديت و بعدين يعمل ريندر و يجيب القيم الجديدة المرادة */}\n            <div className=\"back\">\n               <Link className=\"btn btn-secondary\" to=\"/cloudusers2/users/\">\n                  back to all users\n               </Link>\n            </div>\n         </div>\n      );\n   }\n}\n","import React, { Component } from 'react';\nimport { addUser } from '../api/users';\nimport UsersForm from '../components/usersForm';\nimport { Link } from 'react-router-dom';\n\nexport default class CreateUser extends Component {\n   state = {\n      user: { name: '', email: '', username: '', address: { city: '' }, company: { name: '' } },\n   };\n\n   addUser = (values) => {\n      // solution1 impity field part 1\n      this.setState({\n         user: {\n            ...values,\n         },\n      });\n      // add user api\n      addUser(values)\n         .then(() => {\n            alert('add user success');\n            // solution1 impity field part 2\n            this.setState({\n               // هنا عملنا شينج للستيت علشان الريندر يعشتغل من اول وجديد و الحقول تفضي و خلي بالك احنا فوق خلينا الستيت اليوزر اللي فيها ب القيم اللي كتبناها لاننا لو معملناش الخطوة اللي فوق دي و عملت الخوطة اللي في السطر دا هنا فقط هتلاقي لحلوق مش بتفضب لانك كد يعتبر مش غيرت التيت لان الستيت كانت بالقيم اللي انت بتمتبها دي بالظبط فكدا انت مش عملت تغير يعتبر في التيت\n               user: {\n                  ...this.state.user, // لو شلت السطر دا و الخطوة اللي فوق بتعت تغير ال شينج كدا اللي هيحصل ان الحقل هيفضي في اول مرة لانك يعتبر غيرت الستيت لان كان فيها السيتي و كدا لكن بعد كدا مش الحقول مش هتفضي لان خلاص انت كدا مبقتش يعتبر بتغير في القيم اللي فيها لان هيا القيم دا كانت فيها اصلا من اول القيم الفاضية دي\n                  name: '',\n                  email: '',\n                  username: '',\n               },\n            });\n            // solution2 impity field  can enpty this field using javascript\n            // document.querySelector('input[name=\"name\"]').value = '';\n            // document.querySelector('input[name=\"email\"]').value = '';\n            // document.querySelector('input[name=\"username\"]').value = '';\n         })\n         .catch((error) => {\n            alert('add user error');\n         });\n   };\n\n   handelback = () => {\n      document.querySelector('a[href=\"#cloudusers2/users/create/\"]').classList.remove('active');\n      document.querySelector('a[href=\"#cloudusers2/users/\"]').classList.add('active');\n   };\n\n   render() {\n      return (\n         <div className=\"create-user\">\n            {/* {console.log(this.state.user)} */}\n            <h2>add user</h2>\n            <UsersForm values={this.state.user} onSubmit={this.addUser} />\n            {/* {this.state.user.id > 0 ? <ViewUser user={this.state.user} /> : null} */}\n            {/* خلي بالك هنا انت لازم تتاكد ان ال ستيت بقي فيها اليوزر المطلوب لان الريندر هتتعمل قبل ال كومبوننت ديد ماونت فلو معملتش الشرط دا هتلاقي بيحصل ايرور لما تجيب السيتي او المدينة من الادرس اللي جوا اليوزر لان في الواقع الريندر حصل في الاول قبل ما اليوزر اللي في الستيت يكون موجود فراح عمل ريندر فلاقي اليوزر مفهوش ادرس و انت عاوز السيتي من الادرس فبيديك ايرور فالحل انك تتاكد ان اليوزر موجود الاول و بعدين تبدا تبدا تجيب الكومبوننت دا */}\n            {/* و برضو ممكن نحل المشكلة دي عن طريق اننا ندي قيم افتراضية للحجات اللي احنا هنجيبها في كومبوننت ال فيو يوزر بحيث في اول ريندر يبدا بالقيم الافتراضية وليكن قيم فاضية و بعدين لما الستيت تتغير في الكومبوننت ديد ماونت هيبدا يعمل كومبوننت ديد ابديت و ريندر تاني و في الرندر التاني بقي هيكون الاوبجيكت اليوزر اللي احنا حطيناه فوق بقي فية القيم المطلوبة و المرادة وساعتها ممكن نلغي الاف كونديشن دي لان في اول ريندر بالفعل هيكون في اليوزر القيم الابتدائية للحجات اللي احنا عاوزينها فمش هيدي ايرور بل هيطلع القيم دي و بعديها بثواني قليلة جدا لا تحلاحظ هيبدا الستيت تتغير فهيبدا ينفز الكومبوننت دي ابديت و بعدين يعمل ريندر و يجيب القيم الجديدة المرادة */}\n            <div className=\"back\">\n               <span onClick={this.handelback}>\n                  <Link className=\"btn btn-secondary\" to=\"/cloudusers2/users/\">\n                     back to all users\n                  </Link>\n               </span>\n            </div>\n         </div>\n      );\n   }\n}\n","import React from 'react';\n\nconst NotFound = (props) => {\n   return (\n      <div>\n         <h2>404, Not Found</h2>\n         <p>No Match For {props.location.pathname}</p>\n      </div>\n   );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nfunction NavBar(props) {\n   const MyNavLink = (myNavLinkProps) => (\n      // you can use props or any name  انت هنا ممكن تستخدم اي نيم بس لام تعرف ان اللي هيتمرر هنا هو البروبس او الاتربيوت اللي انت كتبتها في الماي ناف لينك اللي هي التو و الاجساكت و الاكتيف كلاس و الاطفال اللي هيا الحاجات اللي متبتها بين اقواس الماي ناف لينك\n      <NavLink exact className=\"nav-link\" activeClassName=\"active\" {...myNavLinkProps}>\n         {myNavLinkProps.children}\n      </NavLink>\n   );\n   return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n         <div className=\"container-fluid\">\n            <Link className=\"ml3 navbar-brand\" to=\"/cloudusers2\">\n               MUSTAFA SAAD\n            </Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n               <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n               <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                     <MyNavLink to=\"/cloudusers2\">Home</MyNavLink>\n                     {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\n                        Home\n                     </Link> */}\n                  </li>\n                  <li className=\"nav-item\">\n                     <MyNavLink to=\"/cloudusers2/users/\">Users</MyNavLink>\n                     {/* <Link className=\"nav-link\" to=\"/users\">\n                        Users\n                     </Link> */}\n                  </li>\n                  <li className=\"nav-item\">\n                     <MyNavLink to=\"/cloudusers2/users/create/\">create user</MyNavLink>\n                     {/* <Link className=\"nav-link\" to=\"/users/create\">\n                        Create User\n                     </Link> */}\n                  </li>\n                  <li className=\"nav-item\">\n                     <MyNavLink to=\"/cloudusers2/about/\">About</MyNavLink>\n                     {/* <Link className=\"nav-link\" to=\"/about\">\n                        About\n                     </Link> */}\n                  </li>\n               </ul>\n            </div>\n         </div>\n      </nav>\n   );\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport UsersPage from './pages/userspage';\nimport UserPage from './pages/userpage';\nimport EditUserPage from './pages/EditUserPage';\nimport CreateUser from './pages/createUserPage';\nimport NotFound from './pages/NotFound';\nimport NavBar from './components/NavBar';\nimport './App.css';\n\nconst HomePage = () => {\n   return (\n      <div className=\"home\">\n         <div className=\"container\">\n            <div className=\"overlay\">\n               <h2>Home page</h2>\n               <div>\n                  this app created using react, you can get, add, edit and delet any user you want, And all this is done by http ajax request / api (mock api). if you add or edit user application will send http ajax request to api and If there is any problem or error, it will appear as alert and if\n                  you want to see requests (get, delete, put, post) when get or edit or delet or add user you can open inspect then network\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\nconst AboutPage = () => {\n   return (\n      <div className=\"about-us\">\n         <div className=\"container\">\n            <div className=\"overlay\">\n               <h2>About Us</h2>\n               <div>\n                  <p>Name: Mustafa Ahmed Saad</p>\n                  <p>Email: mustafasaad19970@gmail.com</p>\n                  <p>Phone: 01007107894</p>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nclass App extends Component {\n   render() {\n      return (\n         <div className=\"App\">\n            <HashRouter hashType=\"noslash\">\n               <NavBar />\n               {/* <MyNavLink to=\"/\">Home</MyNavLink> <MyNavLink to=\"/users\">Users</MyNavLink> <MyNavLink to=\"/about\">About</MyNavLink> <MyNavLink to=\"/users/create\">create user</MyNavLink> */}\n               <Switch>\n                  <Route className=\"nav-link\" path=\"/cloudusers2\" exact component={HomePage} />\n                  <Route className=\"nav-link\" path=\"/cloudusers2/users/\" exact component={UsersPage} />\n                  <Route className=\"nav-link\" path=\"/cloudusers2/about/\" component={AboutPage} />\n                  <Route className=\"nav-link\" path={'/cloudusers2/users/create/'} exact component={CreateUser} />\n                  {/* this route will Inconsistent with route '/users/:userId' so we will use switch */}\n                  {/* و في ال سويتش الترتيب مهم لان طريقة عمل السويتش هي انها اول ما بتجيب اول روت يتطابق بتجيب الكومبوننت اللي في الراوت و بعدين تطلع مش بتكمل تشيك علي اللي بعد كدا علشان كدا بنخلي الديناميك داتا او البراميتر اللي في اليو ار ال في الاخر و اليو ار ال الثابتة في الاول علشان ميحصلش تعارض و يجيبلك تاكومبوننت التاني بتاع اليو ار الي اللي فية الديناميك داتا او البراميتر و احنا مش عاوزينكدا */}\n                  <Route className=\"nav-link\" path={'/cloudusers2/users/:userId'} exact component={UserPage} />\n                  <Route className=\"nav-link\" path={'/cloudusers2/users/edit/:userId'} exact component={EditUserPage} />\n                  {/* we can write url dinamic data or paramiter like that (:anyVariable) this id will come from  */}\n                  {/* هتتنفز في حالة اللينك كان سلاش و بعدين يوزرز و بعدين سلاش و بعدين اي حاجة بعد كدا مش هتفرق و هياخد الكلمة دي يحطها في البراميتر اللي بيتبعت مع البروبس و هيساويها بالكلام اللي هيتكتب بعد السلاش التانية */}\n                  <Route className=\"nav-link\" path={'/'} component={HomePage} />\n                  <Route className=\"nav-link\" component={NotFound} />\n               </Switch>\n            </HashRouter>\n         </div>\n      );\n   }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}